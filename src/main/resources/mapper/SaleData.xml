<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.SaleDataMapper">

    <select id="selectJyQuantitySalesVolume" resultType="com.example.entity.vo.QuantitySalesVolume">
        select
            (a.`当月销售数量`+b.`当月销售数量条`) as quantity ,(a.`当前月销售额`+b.`当前月销售额条`) as salesVolume,(a.`当前月成本`+b.`当前月成本条`)as cost,(a.`当前月利润`+b.`当前月利润条`) as profit
        from (SELECT
                  SUM(quantity)/10 as 当月销售数量 ,
                  SUM(cost_amount) AS 当前月成本,
                  SUM(amount) AS 当前月销售额,
                  (SUM(amount)-SUM(cost_amount)) AS 当前月利润
              FROM
                  trs_sal_saledtl_jh_pa
              WHERE is_tobacco= 1
        <if test="type == 1">
            AND YEAR(sale_time) = YEAR(#{time}) AND MONTH(sale_time) = MONTH(#{time})
        </if>
        <if test="type == 2">
            AND YEAR(sale_time) = YEAR(#{time})
        </if>
        <if test="type == 3">
            AND YEAR(sale_time) = YEAR(#{time})-1 AND MONTH(sale_time) = MONTH(#{time})
        </if> AND customer_name = #{shopName}
    and unit_name='包') a ,
    (SELECT
            SUM(quantity) as 当月销售数量条 ,
            SUM(cost_amount) AS 当前月成本条,
            SUM(amount) AS 当前月销售额条,
            (SUM(amount)-SUM(cost_amount)) AS 当前月利润条
        FROM
            trs_sal_saledtl_jh_pa
        WHERE is_tobacco= 1
        <if test="type == 1">
            AND YEAR(sale_time) = YEAR(#{time}) AND MONTH(sale_time) = MONTH(#{time})
        </if>
        <if test="type == 2">
            AND YEAR(sale_time) = YEAR(#{time})
        </if>
        <if test="type == 3">
            AND YEAR(sale_time) = YEAR(#{time})-1 AND MONTH(sale_time) = MONTH(#{time})
        </if> AND customer_name =  #{shopName}
          and unit_name='条') b
    </select>

    <select id="selectJyAvgQuantitySalesVolume" resultType="com.example.entity.vo.QuantitySalesVolume">
        SELECT
            cust_type_name,
            allsum,
            xssumall,
            cbsumall,
            sl ,
            allsum/sl  as quantity,
            xssumall/sl as salesVolume,
            cbsumall/sl as cost,
            (xssumall-cbsumall)/sl as profit
        FROM
            (
                SELECT
                    cust_type_name,
                    COUNT(sl) AS sl,
                    sum(allsum) AS allsum,
                    sum(xssumall) AS xssumall,
                    sum(cbsumall) AS cbsumall
                FROM
                    (
                        SELECT
                            customer_code,
                            customer_name,
                            cust_type_name,
                            count(customer_code) AS sl,
                            sum(amount) AS xssumall,
                            sum(cost_amount) AS cbsumall,
                            case when unit_name='包' then sum(quantity/10) else SUM(quantity) end AS allsum
-- unit_name
                        FROM `trs_sal_saledtl_jh_pa` where YEAR(sale_time) = YEAR(#{time}) AND MONTH(sale_time) = MONTH(#{time})
                                                       AND is_tobacco = 1
                                                       AND cust_type_name = #{typeName}
                                                       AND unit_name IN ('条','包')
-- AND customer_name = '磐安县晶营副食店'
                        GROUP BY
                            customer_code,
                            customer_name,
                            cust_type_name
-- ,unit_name
                        ORDER BY cust_type_name
                    ) t  GROUP BY cust_type_name
            ) d

    </select>

    <select id="selectFyQuantitySalesVolume" resultType="com.example.entity.vo.QuantitySalesVolume">
        SELECT
        Sum(quantity) AS quantity,
        SUM(cost_amount) AS cost,
        SUM(amount) AS salesVolume,
        (SUM(amount)-SUM(cost_amount)) AS profit
        FROM
        trs_sal_saledtl_jh_pa
        WHERE
        is_tobacco= 0
        <if test="type == 1">
            AND YEAR(sale_time) = YEAR(#{time}) AND MONTH(sale_time) = MONTH(#{time})
        </if>
        <if test="type == 2">
            AND YEAR(sale_time) = YEAR(#{time})
        </if>
        <if test="type == 3">
            AND YEAR(sale_time) = YEAR(#{time})-1 AND MONTH(sale_time) = MONTH(#{time})
        </if> AND customer_name =  #{shopName} AND goods_name not in ('临时商品')
    </select>


    <select id="selectFyAvgQuantitySalesVolume" resultType="com.example.entity.vo.QuantitySalesVolume">
        SELECT
            cust_type_name,
            allsum,
            xssumall,
            cbsumall,
            sl,
            allsum/sl  as quantity,
            xssumall/sl  as salesVolume,
            cbsumall/sl  as cost,
            (xssumall-cbsumall)/sl  as profit
        FROM
            (
                SELECT
                    cust_type_name,
                    COUNT(sl) AS sl,
                    sum(allsum) AS allsum,
                    sum(xssumall) AS xssumall,
                    sum(cbsumall) AS cbsumall
                FROM
                    (
                        SELECT
                            customer_code,
                            customer_name,
                            cust_type_name,
                            count(customer_code) AS sl,
                            sum(amount) AS xssumall,
                            sum(cost_amount) AS cbsumall,
                            SUM(quantity) AS allsum
                        FROM trs_sal_saledtl_jh_pa
                        where  YEAR(sale_time) = YEAR(#{time}) AND MONTH(sale_time) = MONTH(#{time})
                          AND is_tobacco = 0
                          AND cust_type_name = #{typeName}
                        GROUP BY
                            customer_code,
                            customer_name,
                            cust_type_name ORDER BY cust_type_name
                    ) t  GROUP BY cust_type_name
            ) t2
    </select>

    <select id="selectNextMonthAmount" resultType="java.lang.Double">
        SELECT SUM(cost_amount)
        FROM `trs_sal_saledtl_jh_pa`
        WHERE YEAR(sale_time) = YEAR(#{time}- INTERVAL 1 YEAR)
          AND MONTH(sale_time) = MONTH(#{time} - INTERVAL 1 YEAR) + 1
          AND  customer_name =  #{shopName} AND is_tobacco= #{type}
    </select>


    <select id="selectProfit" resultType="java.lang.Double">
        SELECT SUM(amount)-SUM(cost_amount)
        FROM `trs_sal_saledtl_jh_pa`
        WHERE YEAR(sale_time) = YEAR(#{time} - INTERVAL 1 YEAR)
          AND MONTH(sale_time) = MONTH(#{time} - INTERVAL 1 YEAR) + 1
          AND  customer_name =  #{shopName} and is_tobacco= #{type}
    </select>

    <select id="selectShopMonthJyData" resultType="com.example.entity.vo.ShopMonthData">
        SELECT
            biz_month as shopMonth,
                ROUND(SUM(quantity2),2) as amount,
                ROUND(SUM(cost_amount),2) as cost,
                ROUND(SUM(amount)-SUM(cost_amount),2) as grossProfit
        FROM
            (
                select customer_name,biz_month,quantity,cost_amount,amount,is_tobacco,unit_name,
                       case when unit_name='包' then quantity/10 else quantity end as quantity2 from trs_sal_saledtl_jh_pa
                WHERE customer_name = #{shopName}  and is_tobacco= 1
                  and unit_name in ('包','条')
            ) t
        GROUP BY biz_month
    </select>

    <select id="selectShopMonthData" resultType="com.example.entity.vo.ShopMonthData">
        SELECT
            biz_month as shopMonth,
                ROUND(SUM(quantity),2) as amount,
                ROUND(SUM(cost_amount),2) as cost,
                ROUND(SUM(amount)-SUM(cost_amount),2) as grossProfit
        FROM `trs_sal_saledtl_jh_pa`
        WHERE customer_name = #{shopName}  and is_tobacco=0
        GROUP BY biz_month
    </select>

    <select id="selectFyZFPurchaseReminder" resultType="com.example.entity.vo.PurchaseReminder">
        SELECT
            goods_name1 as goodName,
            sl4,
            sl5,
            s as fd
        FROM (SELECT
                    TEMP1.goods_name AS goods_name1,
                    TEMP2.goods_name AS goods_name2,
                    sl4,
                    sl5,
                    CONCAT( ROUND((( sl5 - sl4 )/ sl4 )* 100, 2 ), '%' ) AS s
                FROM (SELECT
                            b.goods_name,
                            sum(b.quantity) AS sl4
                        FROM
                            `trs_sal_saledtl_jh_pa` AS b
                        WHERE
                                    b.customer_name =  #{shopName}
                                AND MONTH (b.sale_time) = MONTH (#{time})
AND YEAR(b.sale_time) = YEAR(#{time} - INTERVAL 1 YEAR )
AND b.goods_name NOT IN ( '自定义', '火', '顺', '一', '意', '發', '万' )
AND is_tobacco=0
            GROUP BY
                    b.goods_name
            ) TEMP1
                INNER JOIN (
                SELECT
                    goods_name,
                    sum(quantity) AS sl5
                FROM
                    `trs_sal_saledtl_jh_pa`
                WHERE
                            customer_name = #{shopName}
                        AND MONTH(sale_time) = MONTH (#{time} - INTERVAL 1 YEAR ) + 1
AND YEAR(sale_time) = YEAR (#{time} - INTERVAL 1 YEAR )
AND goods_name NOT IN ( '自定义', '火', '顺', '一', '意', '發', '万' )
and is_tobacco=0
        GROUP BY
            goods_name
            ) TEMP2 ON TEMP1.goods_name = TEMP2.goods_name
            ) t
        ORDER BY
            (
            ROUND((( sl5 - sl4 )/ sl4 )* 100, 2 )) DESC
            LIMIT 10
    </select>


    <select id="selectFyJFPurchaseReminder" resultType="com.example.entity.vo.PurchaseReminder">
         SELECT
            goods_name1 as goodName,
            sl4,
            sl5,
            s as fd
        FROM
            (
                SELECT
                    TEMP1.goods_name AS goods_name1,
                    TEMP2.goods_name AS goods_name2,
                    sl4,
                    sl5,
                    CONCAT( ROUND((( sl5 - sl4 )/ sl4 )* 100, 2 ), '%' ) AS s
                FROM
                    (
                        SELECT
                            b.goods_name,
                            sum(b.quantity) AS sl4
                        FROM
                            `trs_sal_saledtl_jh_pa` AS b
                        WHERE
                                    b.customer_name = #{shopName}
                                AND MONTH (b.sale_time) = MONTH (#{time})
AND YEAR (b.sale_time) = YEAR(#{time} - INTERVAL 1 YEAR )
AND b.goods_name NOT IN ( '自定义', '火', '顺', '一', '意', '發', '万' )
 and is_tobacco=0
                GROUP BY
                    b.goods_name
            ) TEMP1
                INNER JOIN (
                SELECT
                    goods_name,
                    sum(quantity) AS sl5
                FROM
                    `trs_sal_saledtl_jh_pa`
                WHERE
                    customer_name = #{shopName}
                        AND MONTH (sale_time) = MONTH (#{time} - INTERVAL 1 YEAR ) + 1
AND YEAR (sale_time) = YEAR (#{time} - INTERVAL 1 YEAR )
AND goods_name NOT IN ( '自定义', '火', '顺', '一', '意', '發', '万' )
and is_tobacco=0
        GROUP BY
            goods_name
            ) TEMP2 ON TEMP1.goods_name = TEMP2.goods_name
            ) t
        ORDER BY
            (
            ROUND((( sl5 - sl4 )/ sl4 )* 100, 2 )) asc
            LIMIT 10
    </select>

    <select id="selectFySaleSuggestion" resultType="com.example.entity.vo.SaleSuggestion">
        SELECT goods_name AS name,
        CASE
        WHEN SUM(quantity) >= 50 AND SUM(amount - cost_amount) >= 100 THEN '量多利多'
        WHEN SUM(quantity) >= 50 AND SUM(amount - cost_amount) &lt; 100 THEN '量多利少'
        WHEN SUM(quantity) &lt; 50 AND SUM(amount - cost_amount) >= 100 THEN '量少利多'
        ELSE '量少利少'
        END AS category,
        SUM(quantity) AS quantity,
        SUM(amount - cost_amount) AS profit
        FROM `trs_sal_saledtl_jh_pa` WHERE
        is_tobacco = #{type}
        AND customer_name =  #{shopName}
        GROUP BY goods_name
        ORDER BY profit DESC
    </select>

    <select id="selectJySaleSuggestion" resultType="com.example.entity.vo.SaleSuggestion">
        SELECT goods_name AS name,
        CASE
        WHEN SUM(quantity) >= 200 AND SUM(amount - cost_amount) >= 2000 THEN '量多利多'
        WHEN SUM(quantity) >= 200 AND SUM(amount - cost_amount) &lt; 2000 THEN '量多利少'
        WHEN SUM(quantity) &lt; 200 AND SUM(amount - cost_amount) >= 2000 THEN '量少利多'
        ELSE '量少利少'
        END AS category,
        SUM(quantity) AS quantity,
        SUM(amount - cost_amount) AS profit
        FROM `trs_sal_saledtl_jh_pa` WHERE
        is_tobacco = #{type}
        AND customer_name =  #{shopName}
        GROUP BY goods_name
        ORDER BY profit DESC
    </select>

    <select id="selectCombinationList" resultType="com.example.entity.vo.BillCodeBean">
        SELECT bill_code as billCode,goods_name as name,is_tobacco as IsTobacco  FROM `trs_sal_saledtl_jh_pa`
        WHERE customer_name = #{shopName} AND
        YEAR(sale_time) = YEAR(#{time})
    </select>

</mapper>